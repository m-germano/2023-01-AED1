#include <stdio.h>
#include <stdlib.h>
#include <time.h>

void swap(int* a, int* b) {
int temp = *a;
*a = *b;
*b = temp;
}

int partition(int array[], const int low, const int high) {
const int pivot = array[high];
int i = (low - 1);

for (int j = low; j <= high - 1; j++) {
    if (array[j] <= pivot) {
        i++;
        swap(&array[i], &array[j]);
    }
}
swap(&array[i + 1], &array[high]);
return (i + 1);

}

void quickSort(int array[], const int low, const int high) {
if (low < high) {
const int pivot_index = partition(array, low, high);
quickSort(array, low, pivot_index - 1);
quickSort(array, pivot_index + 1, high);
}
}

int main() {
int n;
printf("Informe o valor de n: ");
scanf("%d", &n);
int array[n];
srand(time(NULL));
for (int i = 0; i < n; i++) {
array[i] = rand() % 100;
}

clock_t start_time, end_time;
double total_time;

start_time = clock();

quickSort(array, 0, n-1);

end_time = clock();

total_time = ((double) (end_time - start_time)) / (CLOCKS_PER_SEC / 1000);

printf("Array aleatório em ordem crescente: ");
for (int i = 0; i < n; i++) {
    printf("%d ", array[i]);
}

printf("\nTempo de execução do código (em milissegundos): %f", total_time);

return 0;
}
